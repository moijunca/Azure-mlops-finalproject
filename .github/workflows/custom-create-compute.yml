name: custom-create-compute

on: 
  workflow_call:
    inputs:
      cluster_name:
        required: true
        type: string
      size:  
        required: true
        type: string
      min_instances: 
        required: true
        type: number
      max_instances: 
        required: true
        type: number
      resource_group:   
        required: true
        type: string
      workspace_name:  
        required: true
        type: string
      cluster_tier: 
        required: false
        type: string
    secrets:
      creds:
        required: true

jobs:
  create-compute:
    runs-on: ubuntu-latest
    steps:
      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.creds }}

      - name: Install ML extension
        run: az extension add -n ml -y

      - name: Update ML extension
        run: az extension update -n ml

      - name: Check and create compute cluster
        run: |
          set -e

          echo "🔍 Checking if compute cluster '${{ inputs.cluster_name }}' exists..."

          if az ml compute show \
            --name "${{ inputs.cluster_name }}" \
            --resource-group "${{ inputs.resource_group }}" \
            --workspace-name "${{ inputs.workspace_name }}" > /dev/null 2>&1; then

            echo "✅ Compute cluster '${{ inputs.cluster_name }}' already exists. Skipping creation."

          else
            echo "🚀 Creating compute cluster '${{ inputs.cluster_name }}'..."

            # Fallback to 'dedicated' tier if not specified
            TIER="${{ inputs.cluster_tier }}"
            if [ -z "$TIER" ]; then
              TIER="dedicated"
            fi

            az ml compute create --name "${{ inputs.cluster_name }}" \
              --type AmlCompute \
              --tier "$TIER" \
              --size "${{ inputs.size }}" \
              --min-instances "${{ inputs.min_instances }}" \
              --max-instances "${{ inputs.max_instances }}" \
              --resource-group "${{ inputs.resource_group }}" \
              --workspace-name "${{ inputs.workspace_name }}"

            echo "✅ Compute cluster '${{ inputs.cluster_name }}' created successfully."
          fi
